var issues = [
    {
        "id": 0,
        "title": "Javascript server",
        "status": "Closed",
        "user": "Miguel Pimentel",
        "start": "4/19/2019",
        "newest": "5/20/2020",
        "desc": "My first server this semester!"
    },
    {
        "id": 1,
        "title": "Ninjas!",
        "status": "Resolved",
        "user": "Miguel Pimentel",
        "start": "4/19/2019",
        "newest": "5/20/2020",
        "desc": "I'm being attacked by ninjas, and need help!"
    },
    {
        "id": 2,
        "title": "Painting",
        "status": "New",
        "user": "Miguel Pimentel",
        "start": "4/19/2019",
        "newest": "5/20/2020",
        "desc": "I need help picking colors for my portrait."
    },
    {
        "id": 3,
        "title": "I made an AI.",
        "status": "Closed",
        "user": "Miguel Pimentel",
        "start": "4/19/2019",
        "newest": "5/20/2020",
        "desc": "I made an AI, and put it on the server. How to destroy it?"
    },
    {
        "id": 4,
        "title": "Hello World!",
        "status": "Resolved",
        "user": "Miguel Pimentel",
        "start": "4/19/2019",
        "newest": "5/20/2020",
        "desc": "My first server this semester!"
    }
];
module.exports = {
    getIssues: function (res) {
        res.writeHead(500, {
            "Content-Type": "application/json"
        });
        var lineLoop = "";
        JSON.parse(issues)
        res.end(lineLoop);
        return res;
    },
    makeIssues: function (req) {
        var json_body = '';
        req.on('readable', () => {
            var d = req.read();
            if (d) {
                if (typeof d == 'string') {
                    json_body += d;
                } else if (typeof d == 'object' && d instanceof Buffer) {
                    json_body += d.toString('utf8');
                }
            }
        });
        req.on('end', () => {
            if (json_body) {
                try {
                    var bod = "{\"id\" : issues.length, ";
                    bod += json_body;
                    issues.push(JSON.parse(bod));
                    res.writeHead(500, {
                        "Content-Type": "application/json"
                    });
                    res.end("Array Created \n");
                    console.log("Array Created \n");
                } catch (e) {
                    console.log("Error");
                    console.log(e);
                }
                return;
            }
        })
    },
    delIssues: function (id) {
        issues.splice(id, 1);
        for(i = 0; i < issues.length; i++){
            issues[i] = JSON.parse("{\"id\" : " + i+ ", " + issues[i].substring[1, 7]);
        }
    }
}
